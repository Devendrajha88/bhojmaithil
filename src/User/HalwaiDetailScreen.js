import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  Image,
  ScrollView,
  TouchableOpacity,
  Modal,
  Dimensions
} from 'react-native';

const { width, height } = Dimensions.get('window');

export default function HalwaiDetailsModal({ visible, onClose }) {
  const [currentImage, setCurrentImage] = useState(0);

  // Demo Data
  const halwai = {
    name: '‡§∂‡•ç‡§∞‡•Ä ‡§∞‡§æ‡§Æ ‡§π‡§≤‡§µ‡§æ‡§à',
    price: '‚Çπ2200 ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç',
    location: 'üìç ‡§¶‡§∞‡§≠‡§Ç‡§ó‡§æ',
    images: [
      require('./assets/halwai1.jpg'),
      require('./assets/halwai2.jpg'),
      require('./assets/halwai3.jpg')
    ],
    experience: '10 ‡§µ‡§∞‡•ç‡§∑',
    speciality: '‡§∂‡•Å‡§¶‡•ç‡§ß ‡§¶‡•á‡§∏‡•Ä ‡§ò‡•Ä ‡§ï‡•Ä ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Å, ‡§∂‡§æ‡§¶‡•Ä-‡§¨‡•ç‡§Ø‡§æ‡§π ‡§ï‡•à‡§ü‡§∞‡§ø‡§Ç‡§ó',
    language: '‡§π‡§ø‡§Ç‡§¶‡•Ä, ‡§Æ‡•à‡§•‡§ø‡§≤‡•Ä, ‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡§º‡•Ä',
    description:
      '‡§∂‡•ç‡§∞‡•Ä ‡§∞‡§æ‡§Æ ‡§π‡§≤‡§µ‡§æ‡§à ‡§Ü‡§™‡§ï‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•ã ‡§Æ‡•Ä‡§†‡•á ‡§∏‡•ç‡§µ‡§æ‡§¶ ‡§î‡§∞ ‡§¨‡•á‡§π‡§§‡§∞‡•Ä‡§® ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®‡•ã‡§Ç ‡§∏‡•á ‡§ñ‡§æ‡§∏ ‡§¨‡§®‡§æ ‡§¶‡•á‡§ó‡§æ‡•§ ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§™‡§ï‡•ã ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§•-‡§∏‡§æ‡§• ‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Å ‡§≠‡•Ä ‡§Æ‡§ø‡§≤‡•á‡§Ç‡§ó‡•Ä‡•§',
    services: [
      '‡§∂‡•Å‡§¶‡•ç‡§ß ‡§¶‡•á‡§∏‡•Ä ‡§ò‡•Ä ‡§ï‡•Ä ‡§Æ‡§ø‡§†‡§æ‡§á‡§Ø‡§æ‡§Å',
      '‡§µ‡•á‡§ú / ‡§®‡•â‡§®-‡§µ‡•á‡§ú ‡§ï‡•à‡§ü‡§∞‡§ø‡§Ç‡§ó',
      '‡§µ‡§ø‡§µ‡§æ‡§π ‡§è‡§µ‡§Ç ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§Ü‡§Ø‡•ã‡§ú‡§®',
      '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§ï‡§∏‡•ç‡§ü‡§Æ‡§æ‡§á‡§ú‡•á‡§∂‡§®'
    ]
  };

  return (
    <Modal visible={visible} animationType="fade" transparent>
      <View style={styles.overlay}>
        <View style={styles.modalBox}>
          {/* Close Button */}
          <TouchableOpacity style={styles.closeBtn} onPress={onClose}>
            <Text style={{ fontSize: 20, fontWeight: 'bold' }}>‚úï</Text>
          </TouchableOpacity>

          <ScrollView showsVerticalScrollIndicator={false}>
            {/* Image Gallery */}
            <Image source={halwai.images[currentImage]} style={styles.image} />

            <View style={styles.galleryRow}>
              {halwai.images.map((img, idx) => (
                <TouchableOpacity
                  key={idx}
                  onPress={() => setCurrentImage(idx)}
                >
                  <Image source={img} style={[
                    styles.thumb,
                    currentImage === idx && { borderColor: '#F57C00', borderWidth: 2 }
                  ]} />
                </TouchableOpacity>
              ))}
            </View>

            {/* Details */}
            <View style={styles.headerBox}>
              <Text style={styles.name}>{halwai.name}</Text>
              <Text style={styles.meta}>{halwai.location}</Text>
              <Text style={styles.price}>{halwai.price}</Text>
            </View>

            <View style={styles.section}>
              <Text style={styles.sectionTitle}>‡§Ö‡§®‡•Å‡§≠‡§µ</Text>
              <Text style={styles.sectionText}>{halwai.experience}</Text>
            </View>

            <View style={styles.section}>
              <Text style={styles.sectionTitle}>‡§≠‡§æ‡§∑‡§æ</Text>
              <Text style={styles.sectionText}>{halwai.language}</Text>
            </View>

            <View style={styles.section}>
              <Text style={styles.sectionTitle}>‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ</Text>
              <Text style={styles.sectionText}>{halwai.speciality}</Text>
            </View>

            <View style={styles.section}>
              <Text style={styles.sectionTitle}>‡§µ‡§ø‡§µ‡§∞‡§£</Text>
              <Text style={styles.sectionText}>{halwai.description}</Text>
            </View>

            <View style={styles.section}>
              <Text style={styles.sectionTitle}>‡§∏‡•á‡§µ‡§æ‡§è‡§Ç</Text>
              {halwai.services.map((s, i) => (
                <Text key={i} style={styles.sectionText}>‚Ä¢ {s}</Text>
              ))}
            </View>

            {/* Book Button */}
            <TouchableOpacity style={styles.bookBtn}>
              <Text style={styles.bookBtnText}>‡§¨‡•Å‡§ï ‡§ï‡§∞‡•á‡§Ç</Text>
            </TouchableOpacity>
          </ScrollView>
        </View>
      </View>
    </Modal>
  );
}

const styles = StyleSheet.create({
  overlay: {
    flex: 1,
    backgroundColor: 'rgba(0,0,0,0.4)',
    alignItems: 'center',
    justifyContent: 'center',
  },
  modalBox: {
    width: width * 0.9,
    height: height * 0.8,
    backgroundColor: '#fff',
    borderRadius: 20,
    overflow: 'hidden',
    paddingBottom: 10,
    elevation: 8,
    shadowColor: '#000',
    shadowOpacity: 0.3,
    shadowRadius: 8,
  },
  closeBtn: {
    alignSelf: 'flex-end',
    padding: 10,
    zIndex: 1
  },
  image: {
    width: '100%',
    height: 200,
    resizeMode: 'cover'
  },
  galleryRow: {
    flexDirection: 'row',
    justifyContent: 'center',
    marginVertical: 8,
    gap: 6
  },
  thumb: {
    width: 50,
    height: 50,
    resizeMode: 'cover',
    borderRadius: 6
  },
  headerBox: { padding: 12, borderBottomWidth: 1, borderColor: '#eee' },
  name: { fontSize: 20, fontWeight: '900', color: '#222' },
  meta: { fontSize: 18, color: '#555', marginTop: 2 },
  price: { fontSize: 18, fontWeight: '700', color: '#F57C00', marginTop: 2 },

  section: { paddingHorizontal: 12, paddingVertical: 8 },
  sectionTitle: { fontSize: 19, fontWeight: '700', marginBottom: 2, color: '#333' },
  sectionText: { fontSize: 17, color: '#444', lineHeight: 20 },

  bookBtn: {
    backgroundColor: '#F57C00',
    paddingVertical: 10,
    borderRadius: 8,
    alignItems: 'center',
    marginHorizontal: 12,
    marginTop: 10
  },
  bookBtnText: { color: '#fff', fontWeight: '800', fontSize: 15 }
});
